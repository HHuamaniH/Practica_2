
@model List<CapaEntidad.DOC.Ent_INFORME>

<style type="text/css">
    #tbRenderVerticeTHCampo_wrapper {
        padding: 0px;
    }
</style>

<script type="text/javascript">
    var _renderVerticeTHCampo = {};
    _renderVerticeTHCampo.tbEliTABLA = [];

    _renderVerticeTHCampo.fnInitDataTable_Detail = function () {
        var columns_label = [], columns_data = [], options = {};

        columns_label = ["Vértice TH", "Vértice Supervisado", "Zona UTM", "Zona UTM Campo", "Coord. Este", "Coord. Este Campo"
            , "Coord. Norte", "Coord. Norte Campo","Descripción"];
        columns_data = ["VERTICE", "VERTICE_CAMPO", "ZONA", "ZONA_CAMPO", "COORDENADA_ESTE", "COORDENADA_ESTE_CAMPO"
            , "COORDENADA_NORTE", "COORDENADA_NORTE_CAMPO", "OBSERVACION_CAMPO"];
        options = {
            page_length: 10, row_index: true, row_edit: true, row_fnEdit: "_renderVerticeTHCampo.fnAddEdit(this)"
            , row_delete: true, row_fnDelete: "_renderVerticeTHCampo.fnDelete(this)"
            , button_copy: true, button_csv: true, button_excel: true, button_pdf: true, button_print: true
            , export_title: $("#tbRenderVerticeTHCampo").find("thead tr")[0].innerText.trim()
            , page_sort: true
        };
        _renderVerticeTHCampo.dtVerticeTH = utilDt.fnLoadDataTable_Detail($("#tbRenderVerticeTHCampo"), columns_label, columns_data, options);
    }

    _renderVerticeTHCampo.fnAddEdit = function (obj) {
        var url = urlLocalSigo + "Supervision/ManInforme/_VerticeTHCampo";
        var option = { url: url, type: 'POST', datos: { asCodCNotificacion: '@ViewData["cod_cnotificacion"]' }, divId: "mdlManInforme_VerticeTHCampo" };
        utilSigo.fnOpenModal(option, function () {
            _VerticeTHCampo.fnSaveForm = function (data) {
                if (data != null) {
                    var dt = _renderVerticeTHCampo.dtVerticeTH;

                    if (obj == null || obj == "") {//Nuevo Registro
                        if (!utilDt.existValorSearch(_renderVerticeTHCampo.dtVerticeTH, "COD_SISTEMA", data["COD_SISTEMA"])) {
                            dt.rows.add([data]).draw();
                            dt.page('last').draw('page');
                            utilSigo.toastSuccess("Exito", "Datos guardados correctamente");
                        } else {
                            utilSigo.toastWarning("Error", "El vértice ya se encuentra registrado");
                        }
                    } else {//Modificar
                        var row = dt.row($(obj).parents('tr')).data();
                        row = data;
                        dt.row($(obj).parents('tr')).data(row).draw(false);
                        utilSigo.toastSuccess("Exito", "Datos actualizados correctamente");
                    }
                    $("#mdlManInforme_VerticeTHCampo").modal('hide');
                } else {
                    utilSigo.toastError("Error", "No se pudieron guardar los datos");
                }
            }

            if (obj != null && obj != "") {
                var data = _renderVerticeTHCampo.dtVerticeTH.row($(obj).parents('tr')).data();
                _VerticeTHCampo.fnInit(utilSigo.fnConvertArrayToObject(data));
            } else { _VerticeTHCampo.fnInit(""); }
        });
    }

    _renderVerticeTHCampo.fnDeleteAll = function () {
        var rows, countFilas, data;

        rows = _renderVerticeTHCampo.dtVerticeTH.$("tr");
        countFilas = rows.length;
        if (countFilas > 0) {
            utilSigo.dialogConfirm("", "Está seguro de Eliminar Todos los Registros?", function (r) {
                if (r) {
                    $.each(rows, function (i, o) {
                        data = _renderVerticeTHCampo.dtVerticeTH.row($(o)).data();
                        if (data["RegEstado"] == "0" || data["RegEstado"] == "2") {
                            _renderVerticeTHCampo.tbEliTABLA.push({
                                EliTABLA: "ISUPERVISION_DET_VERTICE_THABILITANTE",
                                COD_THABILITANTE: data["COD_SISTEMA"].split('|')[0],
                                COD_SECUENCIAL_ADENDA: data["COD_SISTEMA"].split('|')[1],
                                COD_SECUENCIAL: data["COD_SISTEMA"].split('|')[2]
                            });
                        }
                    });
                    _renderVerticeTHCampo.dtVerticeTH.clear().draw();
                }
            });
        } else {
            utilSigo.toastWarning("Aviso", "No se encontraron registros a eliminar");
        }
    }

    _renderVerticeTHCampo.fnDelete = function (obj) {
        var data;

        data = _renderVerticeTHCampo.dtVerticeTH.row($(obj).parents('tr')).data();
        if (data["RegEstado"] == "0" || data["RegEstado"] == "2") {
            _renderVerticeTHCampo.tbEliTABLA.push({
                EliTABLA: "ISUPERVISION_DET_VERTICE_THABILITANTE",
                COD_THABILITANTE: data["COD_SISTEMA"].split('|')[0],
                COD_SECUENCIAL_ADENDA: data["COD_SISTEMA"].split('|')[1],
                COD_SECUENCIAL: data["COD_SISTEMA"].split('|')[2]
            });
        }
        _renderVerticeTHCampo.dtVerticeTH.row($(obj).parents('tr')).remove().draw(false);
    }

    _renderVerticeTHCampo.fnImport = function (e, obj) {
        var url = urlLocalSigo + "Supervision/ManInforme/ImportarDatosInformeSimple";
        uploadFile.fileSelectHandler(e, obj, url, { asTipo: "VERTICE_THABILITANTE_CAMPO" }, function (data) {
            for (var i = 0; i < data.length; i++) {
                if (!utilDt.existValorSearch(_renderVerticeTHCampo.dtVerticeTH, "COD_SISTEMA", data[i]["COD_SISTEMA"])) {
                    _renderVerticeTHCampo.dtVerticeTH.rows.add([data[i]]).draw();
                    _renderVerticeTHCampo.dtVerticeTH.page('last').draw('page');
                }
            }
        });
    }

    _renderVerticeTHCampo.fnExport = function () {
        var url = urlLocalSigo + "Supervision/ManInforme/ExportarVerticeTHabilitante";
        var params = {
            asCodInforme: '@ViewData["cod_informe"]'
            , asCodCNotificacion: '@ViewData["cod_cnotificacion"]'
        };
        var option = { url: url, datos: JSON.stringify(params), type: 'POST' };

        utilSigo.fnAjax(option, function (data) {
            if (data.success) {
                document.location = urlLocalSigo + "Archivos/Plantilla/" + data.msj;
            } else {
                utilSigo.toastWarning("Aviso", "Sucedio un error, Comuníquese con el Administrador");
                console.log(data.msj);
            }
        });
    }

    _renderVerticeTHCampo.fnGetList = function () {
        var list = [], rows, countFilas, data;

        rows = _renderVerticeTHCampo.dtVerticeTH.$("tr");
        countFilas = rows.length;
        if (countFilas > 0) {
            $.each(rows, function (i, o) {
                data = _renderVerticeTHCampo.dtVerticeTH.row($(o)).data();
                if (data["RegEstado"] == "1" || data["RegEstado"] == "2") {
                    list.push(utilSigo.fnConvertArrayToObject(data));
                }
            });
        }
        return list;
    }

    _renderVerticeTHCampo.fnGetListEliTABLA = function () { return _renderVerticeTHCampo.tbEliTABLA }

    $(document).ready(function () {
        _renderVerticeTHCampo.frm = $("#frmRenderVerticeTHCampo");

        _renderVerticeTHCampo.fnInitDataTable_Detail();

        _renderVerticeTHCampo.dtVerticeTH.rows.add(JSON.parse('@Html.Raw(Json.Encode(@Model))')).draw();
    });
</script>

<div id="frmRenderVerticeTHCampo">
    <div class="table-responsive">
        <table id="tbRenderVerticeTHCampo" style="width:100%;margin:0px !important;" class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th colspan="12" class="text-sm-left">
                        <div class="form-inline">
                            <i class="fa mx-2 fa-lg fa-file-o" style="cursor:pointer;" onclick="_renderVerticeTHCampo.fnAddEdit('');" data-toggle="tooltip" data-placement="top" title="Nuevo"></i>
                            <i class="fa mx-2 fa-lg fa-window-close-o" style="cursor:pointer;" onclick="_renderVerticeTHCampo.fnDeleteAll();" data-toggle="tooltip" data-placement="top" title="Eliminar Todos"></i>
                            <label style="cursor:pointer;" class="fa mx-2 fa-lg fa-file-excel-o" title="Importar Archivo" data-toggle="tooltip">
                                <input type="file" id="fileselect" name="fileselect" style="display:none" size="60" onchange="_renderVerticeTHCampo.fnImport(event, this)">
                            </label>
                            <i class="fa mx-2 fa-lg fa-folder-open" style="cursor:pointer;" onclick="_renderVerticeTHCampo.fnExport();" data-toggle="tooltip" data-placement="top" title="Descargar Plantilla"></i>
                            <strong>Vértices del Título Habilitante</strong>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>